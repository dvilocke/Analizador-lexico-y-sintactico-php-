
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftPLUSMINUSleftTIMESDIVIDEPORCENTrightINCleftLPARENRPARENAND ARROW ASSIGN CLASS COMILLASDOBLES COMILLASIMPLE COMMA COMMENT CONST DIVIDE DOLLAR ECHO ELSE EXTENDS FOR FUNCTION GREATER ID ID2 IF INC IS_EQUAL JUMP LBLOCK LESS LESSEQUAL LPAREN MINUS MINUSMINUS NEW NEWLINE NUMBER OR PHP PLUS PORCENT PREG PRIVATE PROTECTED PUBLIC RBLOCK RETURN RPAREN SEMICOLON STRING TIMES UNDERSCOREprogram : LESS PREG PHP declaration_list PREG GREATERdeclaration_list : declaration_list declarationdeclaration_list : declarationdeclaration : var_declaration\n                   | echo_stmt\n                   | fun_declaration\n                   | selection_stmt\n                   | iteration_stmt \n                   | class_stmt\n    class_stmt : CLASS ID LBLOCK attributes_class statement RBLOCK\n                  | CLASS ID EXTENDS ID LBLOCK attributes_class statement RBLOCKattributes_class : var_declaration3echo_stmt : ECHO STRING SEMICOLON\n                 | ECHO ID SEMICOLON\n                 | ECHO NUMBER SEMICOLON\n                 | ECHO ID ARROW encap SEMICOLON\n                 | empty\n    var_declaration3 : encap ID SEMICOLONvar_declaration3 : encap ID ASSIGN NUMBER SEMICOLONvar_declaration3 : encap ID ASSIGN STRING SEMICOLONvar_declaration3 : encap ID ASSIGN ope symbols ope SEMICOLONvar_declaration : ID ASSIGN SEMICOLONvar_declaration : ID ASSIGN NUMBER SEMICOLONvar_declaration : ID ASSIGN STRING SEMICOLONvar_declaration : ID ASSIGN ope symbols ope SEMICOLONvar_declaration : ID ARROW call_to_functionvar_declaration : ID ASSIGN ID\n                       | ID ASSIGN STRING\n    var_declaration : ID ASSIGN NEW call_to_functionvar_declaration : CONST ID ASSIGN STRING SEMICOLON\n                       | CONST ID ASSIGN NUMBER SEMICOLON\n    var_declaration2 : ID ASSIGN NUMBER\n                        | ID ASSIGN ID\n                        | ID\n    encap : PUBLIC\n             | PROTECTED\n             | PRIVATE\n             | empty\n    ope : ID\n           | NUMBER\n    symbols : PLUS\n               | MINUS\n               | TIMES\n               | DIVIDE\n               | PORCENT\n    call_to_function : ID LPAREN param_list RPAREN SEMICOLONfun_declaration : FUNCTION ID2 LPAREN param_list RPAREN compount_stmtparam_list : param_list COMMA paramparam_list : paramparam_list : emptyparam : ID\n\t\t\t| NUMBER\n\t\t\t| STRINGcompount_stmt : LBLOCK statement_list RBLOCKstatement_list : statement_list statementstatement_list : emptystatement : iteration_stmt \n                | selection_stmt \n                | return_stmt\n                | call_to_function \n                | echo_stmt\n\t\t\t\t| var_declaration\n\t\t\t\t| fun_declaration\n                | COMMENT\n\tselection_stmt : IF LPAREN simple_expression RPAREN LBLOCK statement_list RBLOCKselection_stmt : IF LPAREN simple_expression RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCKiteration_stmt : FOR LPAREN var_declaration2 SEMICOLON  simple_expression SEMICOLON additive_expression RPAREN LBLOCK statement_list RBLOCKsimple_expression : ope2 relop ope2\n                         | simple_expression OR simple_expression\n                         | simple_expression AND simple_expression\n    additive_expression : ID INC\n                           | ID MINUSMINUS\n    ope2 : ID\n            | NUMBER\n            | STRING\n            | ope symbols ope \n    return_stmt : RETURN SEMICOLON\n                   | RETURN ID SEMICOLON\n                   | RETURN NUMBER SEMICOLON\n                   | RETURN STRING SEMICOLON\n                   | RETURN ope symbols  ope SEMICOLON\n                   | RETURN ope relop ope SEMICOLON\n    relop : LESS\n             | GREATER\n             | IS_EQUAL\n             | LESSEQUAL\n    empty : '
    
_lr_action_items = {'LESS':([0,49,50,51,52,96,98,109,136,137,139,],[2,85,-73,-74,-75,-39,-40,-76,-39,-40,85,]),'$end':([1,33,],[0,-1,]),'PREG':([2,4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,100,101,102,126,128,134,143,145,158,168,177,178,],[3,-87,21,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,-30,-31,-16,-25,-47,-10,-46,-65,-54,-11,-66,-67,]),'PHP':([3,],[4,]),'ID':([4,5,6,7,8,9,10,11,12,14,15,16,20,22,23,24,30,31,34,35,37,39,41,43,44,46,47,56,57,58,59,60,61,62,63,64,65,66,67,71,72,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,102,104,105,115,116,117,118,119,120,121,122,123,125,126,128,129,131,132,133,134,135,140,141,142,143,144,145,146,149,150,151,152,153,158,165,166,167,168,169,170,171,172,174,175,176,177,178,],[13,13,-3,-4,-5,-6,-7,-8,-9,25,27,-17,32,-2,34,40,50,55,-27,-22,-28,40,-26,-13,-14,-15,78,-87,95,-23,-24,96,-41,-42,-43,-44,-45,-29,78,-35,-36,-37,-38,50,50,50,-83,-84,-85,-86,96,50,111,113,-12,124,-30,-31,-16,78,-87,-57,-58,-59,-60,-61,-62,-63,-64,136,-87,-25,-47,-87,113,-56,148,-10,-77,-18,96,113,-46,113,-65,-55,-78,-79,-80,96,96,-54,-19,-20,96,-11,-87,-87,-81,-82,113,113,-21,-66,-67,]),'CONST':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,134,135,140,142,143,144,145,146,149,150,151,158,165,166,168,169,170,171,172,174,175,176,177,178,],[14,14,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,14,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,14,-56,-10,-77,-18,14,-46,14,-65,-55,-78,-79,-80,-54,-19,-20,-11,-87,-87,-81,-82,14,14,-21,-66,-67,]),'ECHO':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,134,135,140,142,143,144,145,146,149,150,151,158,165,166,168,169,170,171,172,174,175,176,177,178,],[15,15,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,15,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,15,-56,-10,-77,-18,15,-46,15,-65,-55,-78,-79,-80,-54,-19,-20,-11,-87,-87,-81,-82,15,15,-21,-66,-67,]),'FUNCTION':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,134,135,140,142,143,144,145,146,149,150,151,158,165,166,168,169,170,171,172,174,175,176,177,178,],[17,17,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,17,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,17,-56,-10,-77,-18,17,-46,17,-65,-55,-78,-79,-80,-54,-19,-20,-11,-87,-87,-81,-82,17,17,-21,-66,-67,]),'IF':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,134,135,140,142,143,144,145,146,149,150,151,158,165,166,168,169,170,171,172,174,175,176,177,178,],[18,18,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,18,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,18,-56,-10,-77,-18,18,-46,18,-65,-55,-78,-79,-80,-54,-19,-20,-11,-87,-87,-81,-82,18,18,-21,-66,-67,]),'FOR':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,134,135,140,142,143,144,145,146,149,150,151,158,165,166,168,169,170,171,172,174,175,176,177,178,],[19,19,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,19,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,19,-56,-10,-77,-18,19,-46,19,-65,-55,-78,-79,-80,-54,-19,-20,-11,-87,-87,-81,-82,19,19,-21,-66,-67,]),'CLASS':([4,5,6,7,8,9,10,11,12,16,22,34,35,37,41,43,44,46,58,59,66,100,101,102,126,128,134,143,145,158,168,177,178,],[20,20,-3,-4,-5,-6,-7,-8,-9,-17,-2,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,-30,-31,-16,-25,-47,-10,-46,-65,-54,-11,-66,-67,]),'ASSIGN':([13,25,55,113,124,],[23,42,91,23,141,]),'ARROW':([13,27,113,],[24,45,24,]),'STRING':([15,23,30,42,47,67,82,83,84,85,86,87,88,90,104,123,141,],[26,37,52,68,80,80,52,52,52,-83,-84,-85,-86,52,80,138,155,]),'NUMBER':([15,23,30,42,47,60,61,62,63,64,65,67,82,83,84,85,86,87,88,89,90,91,104,123,141,152,153,167,],[28,36,51,69,79,98,-41,-42,-43,-44,-45,79,51,51,51,-83,-84,-85,-86,98,51,112,79,137,154,98,98,98,]),'RBLOCK':([16,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,114,115,116,117,118,119,120,121,122,126,128,129,131,132,135,140,142,143,144,145,146,149,150,151,157,158,165,166,169,170,171,172,174,175,176,177,178,],[-17,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,-87,-12,-30,-31,-16,-87,134,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,145,-56,-77,-18,-87,-46,158,-65,-55,-78,-79,-80,168,-54,-19,-20,-87,-87,-81,-82,177,178,-21,-66,-67,]),'COMMENT':([16,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,135,140,142,143,144,145,146,149,150,151,158,165,166,169,170,171,172,174,175,176,177,178,],[-17,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,122,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,122,-56,-77,-18,122,-46,122,-65,-55,-78,-79,-80,-54,-19,-20,-87,-87,-81,-82,122,122,-21,-66,-67,]),'RETURN':([16,34,35,37,41,43,44,46,58,59,66,92,93,100,101,102,105,115,116,117,118,119,120,121,122,126,128,129,131,132,135,140,142,143,144,145,146,149,150,151,158,165,166,169,170,171,172,174,175,176,177,178,],[-17,-27,-22,-28,-26,-13,-14,-15,-23,-24,-29,123,-12,-30,-31,-16,-87,-57,-58,-59,-60,-61,-62,-63,-64,-25,-47,-87,123,-56,-77,-18,123,-46,123,-65,-55,-78,-79,-80,-54,-19,-20,-87,-87,-81,-82,123,123,-21,-66,-67,]),'ID2':([17,],[29,]),'LPAREN':([18,19,29,40,113,],[30,31,47,67,67,]),'GREATER':([21,49,50,51,52,96,98,109,136,137,139,],[33,86,-73,-74,-75,-39,-40,-76,-39,-40,86,]),'SEMICOLON':([23,26,27,28,36,37,45,50,51,52,54,55,68,69,70,71,72,73,74,96,97,98,106,107,108,109,110,111,112,123,124,127,136,137,138,154,155,163,164,173,],[35,43,44,46,58,59,-87,-73,-74,-75,90,-34,100,101,102,-35,-36,-37,-38,-39,126,-40,-69,-70,-68,-76,133,-33,-32,135,140,143,149,150,151,165,166,171,172,176,]),'NEW':([23,],[39,]),'LBLOCK':([32,81,95,103,159,160,],[56,105,125,129,169,170,]),'EXTENDS':([32,],[57,]),'PLUS':([34,36,38,50,51,53,96,136,137,139,154,156,],[-39,-40,61,-39,-40,61,-39,-39,-40,61,-40,61,]),'MINUS':([34,36,38,50,51,53,96,136,137,139,154,156,],[-39,-40,62,-39,-40,62,-39,-39,-40,62,-40,62,]),'TIMES':([34,36,38,50,51,53,96,136,137,139,154,156,],[-39,-40,63,-39,-40,63,-39,-39,-40,63,-40,63,]),'DIVIDE':([34,36,38,50,51,53,96,136,137,139,154,156,],[-39,-40,64,-39,-40,64,-39,-39,-40,64,-40,64,]),'PORCENT':([34,36,38,50,51,53,96,136,137,139,154,156,],[-39,-40,65,-39,-40,65,-39,-39,-40,65,-40,65,]),'PUBLIC':([45,56,125,],[71,71,71,]),'PROTECTED':([45,56,125,],[72,72,72,]),'PRIVATE':([45,56,125,],[73,73,73,]),'RPAREN':([47,48,50,51,52,67,75,76,77,78,79,80,96,98,99,106,107,108,109,130,147,161,162,],[-87,81,-73,-74,-75,-87,103,-49,-50,-51,-52,-53,-39,-40,127,-69,-70,-68,-76,-48,160,-71,-72,]),'COMMA':([47,67,75,76,77,78,79,80,99,130,],[-87,-87,104,-49,-50,-51,-52,-53,104,-48,]),'OR':([48,50,51,52,96,98,106,107,108,109,110,],[82,-73,-74,-75,-39,-40,82,82,-68,-76,82,]),'AND':([48,50,51,52,96,98,106,107,108,109,110,],[83,-73,-74,-75,-39,-40,83,83,-68,-76,83,]),'IS_EQUAL':([49,50,51,52,96,98,109,136,137,139,],[87,-73,-74,-75,-39,-40,-76,-39,-40,87,]),'LESSEQUAL':([49,50,51,52,96,98,109,136,137,139,],[88,-73,-74,-75,-39,-40,-76,-39,-40,88,]),'ELSE':([145,],[159,]),'INC':([148,],[161,]),'MINUSMINUS':([148,],[162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([4,],[5,]),'declaration':([4,5,],[6,22,]),'var_declaration':([4,5,92,131,142,144,174,175,],[7,7,120,120,120,120,120,120,]),'echo_stmt':([4,5,92,131,142,144,174,175,],[8,8,119,119,119,119,119,119,]),'fun_declaration':([4,5,92,131,142,144,174,175,],[9,9,121,121,121,121,121,121,]),'selection_stmt':([4,5,92,131,142,144,174,175,],[10,10,116,116,116,116,116,116,]),'iteration_stmt':([4,5,92,131,142,144,174,175,],[11,11,115,115,115,115,115,115,]),'class_stmt':([4,5,],[12,12,]),'empty':([4,5,45,47,56,67,92,105,125,129,131,142,144,169,170,174,175,],[16,16,74,77,74,77,16,132,74,132,16,16,16,132,132,16,16,]),'ope':([23,30,60,82,83,84,89,90,123,141,152,153,167,],[38,53,97,53,53,53,109,53,139,156,163,164,173,]),'call_to_function':([24,39,92,131,142,144,174,175,],[41,66,118,118,118,118,118,118,]),'simple_expression':([30,82,83,90,],[48,106,107,110,]),'ope2':([30,82,83,84,90,],[49,49,49,108,49,]),'var_declaration2':([31,],[54,]),'symbols':([38,53,139,156,],[60,89,152,167,]),'encap':([45,56,125,],[70,94,94,]),'param_list':([47,67,],[75,99,]),'param':([47,67,104,],[76,76,130,]),'relop':([49,139,],[84,153,]),'attributes_class':([56,125,],[92,142,]),'var_declaration3':([56,125,],[93,93,]),'statement':([92,131,142,144,174,175,],[114,146,157,146,146,146,]),'return_stmt':([92,131,142,144,174,175,],[117,117,117,117,117,117,]),'compount_stmt':([103,],[128,]),'statement_list':([105,129,169,170,],[131,144,174,175,]),'additive_expression':([133,],[147,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> LESS PREG PHP declaration_list PREG GREATER','program',6,'p_program','sintactico.py',28),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','sintactico.py',32),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','sintactico.py',36),
  ('declaration -> var_declaration','declaration',1,'p_declaration','sintactico.py',41),
  ('declaration -> echo_stmt','declaration',1,'p_declaration','sintactico.py',42),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','sintactico.py',43),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','sintactico.py',44),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','sintactico.py',45),
  ('declaration -> class_stmt','declaration',1,'p_declaration','sintactico.py',46),
  ('class_stmt -> CLASS ID LBLOCK attributes_class statement RBLOCK','class_stmt',6,'p_class_1','sintactico.py',51),
  ('class_stmt -> CLASS ID EXTENDS ID LBLOCK attributes_class statement RBLOCK','class_stmt',8,'p_class_1','sintactico.py',52),
  ('attributes_class -> var_declaration3','attributes_class',1,'p_class_2','sintactico.py',57),
  ('echo_stmt -> ECHO STRING SEMICOLON','echo_stmt',3,'p_echo_stmt','sintactico.py',62),
  ('echo_stmt -> ECHO ID SEMICOLON','echo_stmt',3,'p_echo_stmt','sintactico.py',63),
  ('echo_stmt -> ECHO NUMBER SEMICOLON','echo_stmt',3,'p_echo_stmt','sintactico.py',64),
  ('echo_stmt -> ECHO ID ARROW encap SEMICOLON','echo_stmt',5,'p_echo_stmt','sintactico.py',65),
  ('echo_stmt -> empty','echo_stmt',1,'p_echo_stmt','sintactico.py',66),
  ('var_declaration3 -> encap ID SEMICOLON','var_declaration3',3,'p_var_declaration_1','sintactico.py',76),
  ('var_declaration3 -> encap ID ASSIGN NUMBER SEMICOLON','var_declaration3',5,'p_var_declaration_2','sintactico.py',80),
  ('var_declaration3 -> encap ID ASSIGN STRING SEMICOLON','var_declaration3',5,'p_var_declaration_3','sintactico.py',85),
  ('var_declaration3 -> encap ID ASSIGN ope symbols ope SEMICOLON','var_declaration3',7,'p_var_declaration_4','sintactico.py',89),
  ('var_declaration -> ID ASSIGN SEMICOLON','var_declaration',3,'p_var_declaration_5','sintactico.py',94),
  ('var_declaration -> ID ASSIGN NUMBER SEMICOLON','var_declaration',4,'p_var_declaration_6','sintactico.py',98),
  ('var_declaration -> ID ASSIGN STRING SEMICOLON','var_declaration',4,'p_var_declaration_7','sintactico.py',102),
  ('var_declaration -> ID ASSIGN ope symbols ope SEMICOLON','var_declaration',6,'p_var_declaration_8','sintactico.py',106),
  ('var_declaration -> ID ARROW call_to_function','var_declaration',3,'p_var_declaration_9','sintactico.py',109),
  ('var_declaration -> ID ASSIGN ID','var_declaration',3,'p_var_declaration_10','sintactico.py',113),
  ('var_declaration -> ID ASSIGN STRING','var_declaration',3,'p_var_declaration_10','sintactico.py',114),
  ('var_declaration -> ID ASSIGN NEW call_to_function','var_declaration',4,'p_var_declaration_12','sintactico.py',119),
  ('var_declaration -> CONST ID ASSIGN STRING SEMICOLON','var_declaration',5,'p_var_declaration_13','sintactico.py',123),
  ('var_declaration -> CONST ID ASSIGN NUMBER SEMICOLON','var_declaration',5,'p_var_declaration_13','sintactico.py',124),
  ('var_declaration2 -> ID ASSIGN NUMBER','var_declaration2',3,'p_var_declaration_11','sintactico.py',130),
  ('var_declaration2 -> ID ASSIGN ID','var_declaration2',3,'p_var_declaration_11','sintactico.py',131),
  ('var_declaration2 -> ID','var_declaration2',1,'p_var_declaration_11','sintactico.py',132),
  ('encap -> PUBLIC','encap',1,'p_encap','sintactico.py',142),
  ('encap -> PROTECTED','encap',1,'p_encap','sintactico.py',143),
  ('encap -> PRIVATE','encap',1,'p_encap','sintactico.py',144),
  ('encap -> empty','encap',1,'p_encap','sintactico.py',145),
  ('ope -> ID','ope',1,'p_operator_1','sintactico.py',151),
  ('ope -> NUMBER','ope',1,'p_operator_1','sintactico.py',152),
  ('symbols -> PLUS','symbols',1,'p_symbols_1','sintactico.py',157),
  ('symbols -> MINUS','symbols',1,'p_symbols_1','sintactico.py',158),
  ('symbols -> TIMES','symbols',1,'p_symbols_1','sintactico.py',159),
  ('symbols -> DIVIDE','symbols',1,'p_symbols_1','sintactico.py',160),
  ('symbols -> PORCENT','symbols',1,'p_symbols_1','sintactico.py',161),
  ('call_to_function -> ID LPAREN param_list RPAREN SEMICOLON','call_to_function',5,'p_call_to_function','sintactico.py',168),
  ('fun_declaration -> FUNCTION ID2 LPAREN param_list RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','sintactico.py',172),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','sintactico.py',176),
  ('param_list -> param','param_list',1,'p_param_list_2','sintactico.py',180),
  ('param_list -> empty','param_list',1,'p_param_list_3','sintactico.py',184),
  ('param -> ID','param',1,'p_param_1','sintactico.py',188),
  ('param -> NUMBER','param',1,'p_param_1','sintactico.py',189),
  ('param -> STRING','param',1,'p_param_1','sintactico.py',190),
  ('compount_stmt -> LBLOCK statement_list RBLOCK','compount_stmt',3,'p_compount_stmt','sintactico.py',194),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','sintactico.py',198),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','sintactico.py',202),
  ('statement -> iteration_stmt','statement',1,'p_statement','sintactico.py',206),
  ('statement -> selection_stmt','statement',1,'p_statement','sintactico.py',207),
  ('statement -> return_stmt','statement',1,'p_statement','sintactico.py',208),
  ('statement -> call_to_function','statement',1,'p_statement','sintactico.py',209),
  ('statement -> echo_stmt','statement',1,'p_statement','sintactico.py',210),
  ('statement -> var_declaration','statement',1,'p_statement','sintactico.py',211),
  ('statement -> fun_declaration','statement',1,'p_statement','sintactico.py',212),
  ('statement -> COMMENT','statement',1,'p_statement','sintactico.py',213),
  ('selection_stmt -> IF LPAREN simple_expression RPAREN LBLOCK statement_list RBLOCK','selection_stmt',7,'p_selection_stmt_1','sintactico.py',222),
  ('selection_stmt -> IF LPAREN simple_expression RPAREN LBLOCK statement_list RBLOCK ELSE LBLOCK statement_list RBLOCK','selection_stmt',11,'p_selection_stmt_2','sintactico.py',226),
  ('iteration_stmt -> FOR LPAREN var_declaration2 SEMICOLON simple_expression SEMICOLON additive_expression RPAREN LBLOCK statement_list RBLOCK','iteration_stmt',11,'p_iteration_stmt_1','sintactico.py',230),
  ('simple_expression -> ope2 relop ope2','simple_expression',3,'p_simple_expression','sintactico.py',234),
  ('simple_expression -> simple_expression OR simple_expression','simple_expression',3,'p_simple_expression','sintactico.py',235),
  ('simple_expression -> simple_expression AND simple_expression','simple_expression',3,'p_simple_expression','sintactico.py',236),
  ('additive_expression -> ID INC','additive_expression',2,'p_additive_expression_1','sintactico.py',241),
  ('additive_expression -> ID MINUSMINUS','additive_expression',2,'p_additive_expression_1','sintactico.py',242),
  ('ope2 -> ID','ope2',1,'p_ope_2','sintactico.py',247),
  ('ope2 -> NUMBER','ope2',1,'p_ope_2','sintactico.py',248),
  ('ope2 -> STRING','ope2',1,'p_ope_2','sintactico.py',249),
  ('ope2 -> ope symbols ope','ope2',3,'p_ope_2','sintactico.py',250),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt_1','sintactico.py',255),
  ('return_stmt -> RETURN ID SEMICOLON','return_stmt',3,'p_return_stmt_1','sintactico.py',256),
  ('return_stmt -> RETURN NUMBER SEMICOLON','return_stmt',3,'p_return_stmt_1','sintactico.py',257),
  ('return_stmt -> RETURN STRING SEMICOLON','return_stmt',3,'p_return_stmt_1','sintactico.py',258),
  ('return_stmt -> RETURN ope symbols ope SEMICOLON','return_stmt',5,'p_return_stmt_1','sintactico.py',259),
  ('return_stmt -> RETURN ope relop ope SEMICOLON','return_stmt',5,'p_return_stmt_1','sintactico.py',260),
  ('relop -> LESS','relop',1,'p_relop','sintactico.py',265),
  ('relop -> GREATER','relop',1,'p_relop','sintactico.py',266),
  ('relop -> IS_EQUAL','relop',1,'p_relop','sintactico.py',267),
  ('relop -> LESSEQUAL','relop',1,'p_relop','sintactico.py',268),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',273),
]
